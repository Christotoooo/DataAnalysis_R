knitr::opts_chunk$set(echo = TRUE)
cross_entropy_loss <- function(theta, x1, x2, y){
p <- log_reg(theta, x1, x2)
output <- 0
for(i in seq_along(y)){
#
}
}
cross_entropy_loss <- function(theta, x1, x2, y){
p <- log_reg(theta, x1, x2)
output <- 0
for(i in seq_along(y)){
one_term <- y[i] * log(p[i], base = exp(1)) + (1-y[i]) * log(1-p[i], base = exp(1))
output <- output - one_term
}
return(output)
}
#testing
theta <- c(0,1,1)
x1 <- c(1,9)
x2 <- c(1,1)
y <- c(1,0.5)
cross_entropy_loss(theta,x1,x2,y)
knitr::opts_chunk$set(echo = TRUE)
log_reg <- function(theta, x1, x2){
output <- c()
for(i in seq_along(x1)){
p <- 1/(1 + exp(-x1[i]*theta[1] - x2[i]*theta[2] - theta[3]))
output <- c(output, p)
}
return(output)
}
#testing
#theta <- c(0,1,1)
#x1 <- c(1,9)
#x2 <- c(1,1)
#log_reg(theta,x1,x2)
cross_entropy_loss <- function(theta, x1, x2, y){
p <- log_reg(theta, x1, x2)
output <- 0
for(i in seq_along(y)){
one_term <- y[i] * log(p[i], base = exp(1)) + (1-y[i]) * log(1-p[i], base = exp(1))
output <- output - one_term
}
return(output)
}
#testing
theta <- c(0,1,1)
x1 <- c(1,9)
x2 <- c(1,1)
y <- c(1,0.5)
cross_entropy_loss(theta,x1,x2,y)
#testing
theta <- c(0,1,1)
x1 <- c(1,9)
x2 <- c(1,1)
y <- c(1,0.6)
cross_entropy_loss(theta,x1,x2,y)
#testing
theta <- c(0,1,1)
x1 <- c(1,9)
x2 <- c(1,1)
y <- c(1,0.9)
cross_entropy_loss(theta,x1,x2,y)
#testing
theta <- c(0,1,1)
x1 <- c(1,9)
x2 <- c(1,1)
y <- c(1,0.7)
cross_entropy_loss(theta,x1,x2,y)
knitr::opts_chunk$set(echo = TRUE)
cross_entropy_loss <- function(theta, x1, x2, y){
p <- log_reg(theta, x1, x2)
output <- 0
for(i in seq_along(y)){
one_term <- y[i] * log(p[i], base = exp(1)) + (1-y[i]) * log(1-p[i], base = exp(1))
output <- output - one_term
}
return(output)
}
#testing
#theta <- c(0,1,1)
#x1 <- c(1,9)
#x2 <- c(1,1)
#y <- c(1,0.7)
#cross_entropy_loss(theta,x1,x2,y)
library(readr)
library(dplyr)
library(purrr)
HTRU <- read_csv("D:/PERSONAL/McGill/McGill/McGill Current/MATH 208/assignments/A3/HTRU_2.csv",col_names = FALSE)
var_combs<-combn(names(HTRU[,-9]),2) ## -9 excludes the 9th column, the Class variable
loss_cal2 <- function(cols){
x1_data <- c(HTRU[[cols[[1]]]])
x2_data <- c(HTRU[[cols[[2]]]])
y_data <- c(HTRU$X9)
result2<-optim(par=c(0,0,0), fn=cross_entropy_loss, x1=x1_data, x2=x2_data, y=y_data)
}
#result2 <- loss_cal2("X1", "X2")
var_df <- as.data.frame(var_combs)
#c1 <- droplevels(var_df[[1,1]])
#HTRU[[c1]]
result_final <- map_dfr(var_df,loss_cal2)
library(readr)
library(dplyr)
library(purrr)
HTRU <- read_csv("D:/PERSONAL/McGill/McGill/McGill Current/MATH 208/assignments/A3/HTRU_2.csv",col_names = FALSE)
var_combs<-combn(names(HTRU[,-9]),2) ## -9 excludes the 9th column, the Class variable
loss_cal2 <- function(cols){
x1_data <- c(HTRU[[cols[[1]]]])
x2_data <- c(HTRU[[cols[[2]]]])
y_data <- c(HTRU$X9)
result2<-optim(par=c(0,0,0), fn=cross_entropy_loss, x1=x1_data, x2=x2_data, y=y_data)
return(result2$value)
}
#result2 <- loss_cal2("X1", "X2")
var_df <- as.data.frame(var_combs)
#c1 <- droplevels(var_df[[1,1]])
#HTRU[[c1]]
cross_entropy_loss <- function(theta, x1, x2, y){
p <- log_reg(theta, x1, x2)
output <- 0
for(i in seq_along(y)){
one_term <- y[i] * log(p[i], base = exp(1)) + (1-y[i]) * log(1-p[i], base = exp(1))
output <- output - one_term
}
return(output)
}
#testing
#theta <- c(0,1,1)
#x1 <- c(1,9)
#x2 <- c(1,1)
#y <- c(1,0.7)
#cross_entropy_loss(theta,x1,x2,y)
library(readr)
library(dplyr)
library(purrr)
HTRU <- read_csv("D:/PERSONAL/McGill/McGill/McGill Current/MATH 208/assignments/A3/HTRU_2.csv",col_names = FALSE)
var_combs<-combn(names(HTRU[,-9]),2) ## -9 excludes the 9th column, the Class variable
loss_cal2 <- function(cols){
x1_data <- c(HTRU[[cols[[1]]]])
x2_data <- c(HTRU[[cols[[2]]]])
y_data <- c(HTRU$X9)
result2<-optim(par=c(0,0,0), fn=cross_entropy_loss, x1=x1_data, x2=x2_data, y=y_data)
return(result2$value)
}
#result2 <- loss_cal2("X1", "X2")
var_df <- as.data.frame(var_combs)
#c1 <- droplevels(var_df[[1,1]])
#HTRU[[c1]]
result_final <- map_dfr(var_df,loss_cal2)
#length(var_df)
#loss_cal2(var)
result_final
var_df
library(readr)
library(dplyr)
library(purrr)
HTRU <- read_csv("D:/PERSONAL/McGill/McGill/McGill Current/MATH 208/assignments/A3/HTRU_2.csv",col_names = FALSE)
var_combs<-combn(names(HTRU[,-9]),2) ## -9 excludes the 9th column, the Class variable
loss_cal2 <- function(cols){
x1_data <- c(HTRU[[cols[[1]]]])
x2_data <- c(HTRU[[cols[[2]]]])
y_data <- c(HTRU$X9)
result2<-optim(par=c(0,0,0), fn=cross_entropy_loss, x1=x1_data, x2=x2_data, y=y_data)
return(result2$value)
}
#result2 <- loss_cal2("X1", "X2")
var_df <- as.data.frame(var_combs)
#c1 <- droplevels(var_df[[1,1]])
#HTRU[[c1]]
var_df
result_final <- map_dfr(var_df,loss_cal2)
#length(var_df)
#loss_cal2(var)
result_final
result_final <- map_dfr(var_df,loss_cal2)
library(readr)
library(dplyr)
library(purrr)
HTRU <- read_csv("D:/PERSONAL/McGill/McGill/McGill Current/MATH 208/assignments/A3/HTRU_2.csv",col_names = FALSE)
var_combs<-combn(names(HTRU[,-9]),2) ## -9 excludes the 9th column, the Class variable
loss_cal2 <- function(cols){
x1_data <- c(HTRU[[cols[[1]]]])
x2_data <- c(HTRU[[cols[[2]]]])
y_data <- c(HTRU$X9)
result2<-optim(par=c(0,0,0), fn=cross_entropy_loss, x1=x1_data, x2=x2_data, y=y_data)
little_tb <- tibble(
"col1" = cols[[1]],
"col2" = cols[[2]],
"cross entropy loss" = result2$value
)
return(little_tb)
}
#result2 <- loss_cal2("X1", "X2")
var_df <- as.data.frame(var_combs)
#c1 <- droplevels(var_df[[1,1]])
#HTRU[[c1]]
result2 <- loss_cal2(c("X1", "X2"))
result2
